

Structure
  factory
    LogFactory : will return adapter as per the Adapter type specified to it.
    API:
      getAdapter(str, logOptions): will return adapter instance

  adapters
    pino,
    winston
    bunyan

  // DONE
  mlogger.js
    constructor(scope) {
      this._scope = parsePathToScope()
    }
    log
      this._adapter[level](msg, args)
    debug
    info
    error
    lazyLoad - skipped as need to make sure logger is instantied as we should not access env for level, logpath;
    getAdapter

    static
      Adapter = Map():Adapters
      logOptions = { level, logPath }
      addAdapter('str', instance)
      setAdapter(string)
      setLoggerOptions({ level, logPath })

addAdapter(str, instance) {
  Logger.Adapter.set(str, instance)
}
setAdapter(str) {
  this._adapter = Factory.getAdapter(str, scope, logOptions);
  return this._adapter;
}

/***********************************************************/

Usage
  serviceLogger
    class ServiceLogger {
      configure() {
        Logger.setLoggerOptions({});
        Logger.addAdapter('pino', Logger.setAdapter('pino'));
      }
    }